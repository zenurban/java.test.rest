

buildscript {
    ext.kotlin_version = '1.2.31'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.31"
    }
}


plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'

    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    //id 'kotlin' //version  '1.2.10'
    //    id "org.jetbrains.kotlin.jvm" version kotlin_version

    id 'war'
}

kotlin_version = '1.2.31'
apply plugin: 'kotlin'


compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    compile group: 'org.slf4j', name:'slf4j-api', version: '1.7.2'
    compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'
    compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9'

    def springVersion = "4.3.10.RELEASE"
    //def springVersion = "5.0.4.RELEASE"
    compile group: 'org.springframework', name: 'spring-core', version: springVersion
    compile group: 'org.springframework', name: 'spring-context', version: springVersion
    compile group: 'org.springframework', name: 'spring-web', version: springVersion
    testCompile group: 'org.springframework', name: 'spring-test', version: springVersion


    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1'
    def jettyVersion = "9.4.9.v20180320"
    testCompile group: 'org.eclipse.jetty', name: 'jetty-server', version: jettyVersion
//    compile group: 'org.eclipse.jetty', name: 'jetty-servlets', version: jettyVersion
    testCompile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: jettyVersion

    def jerseyVersion = "2.26"
    testCompile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: jerseyVersion
    testCompile "org.glassfish.jersey.core:jersey-common:$jerseyVersion"
    //testCompile 'org.glassfish.jersey.inject:jersey-hk2:2.26'
    testCompile group: 'org.glassfish.jersey.ext', name: 'jersey-spring4', version: jerseyVersion

    //    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'
    testCompile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy-all:2.4.13'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:1.0-groovy-2.4'
    testImplementation 'junit:junit:4.12'

    compile "org.jetbrains.kotlin:kotlin-stdlib:1.2.31"
//    testCompile group: 'io.kotlintest', name: 'kotlintest', version: '2.0.7'
    compile group: 'io.kotlintest', name: 'kotlintest-tests', version: '3.0.0-RC2'
    compile group: 'io.kotlintest', name: 'kotlintest-core', version: '3.0.1'
    testCompile group: 'io.kotlintest', name: 'kotlintest-runner-junit5', version: '3.0.1'
    compile group: 'io.kotlintest', name: 'kotlintest-assertions', version: '3.0.1'
    compile group: 'io.kotlintest', name: 'kotlintest-intellij', version: '3.0.1'
    
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()

}

task runJetty(type: JavaExec, dependsOn: 'classes') {
    main = "rest.jetty.JettyRunner"
//    classpath = configurations.testRuntimeClasspath
    classpath = sourceSets.test.runtimeClasspath   + sourceSets.main.runtimeClasspath
}